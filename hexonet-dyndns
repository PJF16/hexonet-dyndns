#!/usr/bin/python
import ispapi # https://wiki.hexonet.net/wiki/SDKs#PYTHON_Library
import os
import sys
import urllib2

# HEXONET Config
HEXONET = {
    "user": "ayedoit",
    "password": "ayedoit1234.",
    "entity": "54cd",
    "API": "https://api.ispapi.net/api/call.cgi"
}

nodes = [
    "http://icanhazip.com",
    # Add Nodes here if needed - might make sense to add some kind of random selection to avoid lockouts
]

# Hostname
if (len(sys.argv) <= 1):
    print "Meeeeh. No DynDNS Hostname given :( Nothing to do here..."
    sys.exit(1)
else:
    if sys.argv[1] != "":
        hostname = sys.argv[1]
    else:
        print "Meeeeh. DynDNS Hostname has zero length: %s" % sys.argv[1]
        sys.exit(1)

def checkPublicIP():
    fqn = os.uname()[1]
    ext_ip = "127.0.0.1"

    last_ip = ""
    for node in nodes:
        ip = urllib2.urlopen(node).read()

        if ip and ip != "" and ip != "127.0.0.1":
            ext_ip = ip
            break

    if ext_ip != "" and ext_ip != "127.0.0.1":
        return ext_ip
    else:
        return "127.0.0.1"

def ispapiConnect():
    api = ispapi.connect(
        url = HEXONET['API'],
        entity = HEXONET['entity'],
        login = HEXONET['user'],
        password = HEXONET['password']
    )
    return api

def main():
    extIP = checkPublicIP().rstrip()
    curIP = "0.0.0.0"
    api = ispapiConnect()

    # Split Hostname
    host = hostname.split('.')
    dnszone = host[len(host)-2]+"."+host[len(host)-1]+"."
    subdomain = host[0]

    # Lookup current IP for your desired hostname
    response = api.call({
       'COMMAND': "QueryDNSZoneRRList",
       'DNSZONE' : dnszone,
       'SHORT': 1
    })

    # Display the result in the format you want
    result = response.as_hash()

    e = 0
    for rr in result['PROPERTY']['RR']:
        data = rr.split(' ')

        if str(data[0]) == subdomain:
            # Current IP exists
            e = 1

            print "Found CN '%s' in DNS Zone '%s'" % (data[0],dnszone)

            curIP = data[4].rstrip()
            if (str(curIP) != str(extIP)):
                # Delete Current Record
                response = api.call({
                   'COMMAND': "UpdateDNSZone",
                   'DNSZONE' : dnszone,
                   'DELRR0': data[0]+" "+data[1]+" "+data[2]+" "+data[3]+" "+curIP,
                   'ADDRR0': data[0]+" "+data[1]+" "+data[2]+" "+data[3]+" "+extIP,
                   'INCSERIAL': 1
                })
                result = response.as_hash()

                if result['CODE'] == 200:
                    print "Updated CN '%s' in DNS Zone '%s': %s => %s" % (data[0],dnszone,curIP,extIP)
                else:
                    print "Update on CN '%s' in DNS Zone '%s' failed: %s" % (data[0],dnszone,result['DESCRIPTION'])
            else:
                print  "No Update necessary, IPs still match :)"

    if e == 0:
        # Your DynDNS Hostname does not yet exist in this zone
        response = api.call({
           'COMMAND': "UpdateDNSZone",
           'DNSZONE' : dnszone,
           'ADDRR0': subdomain+" 10 IN A "+extIP,
           'INCSERIAL': 1
        })
        result = response.as_hash()

        if result['CODE'] == 200:
            print "Created CN '%s' in DNS Zone '%s': %s => %s" % (data[0],dnszone,curIP,extIP)
        else:
            print "Creation of CN '%s' in DNS Zone '%s' failed: %s" % (data[0],dnszone,result['DESCRIPTION'])

main()
